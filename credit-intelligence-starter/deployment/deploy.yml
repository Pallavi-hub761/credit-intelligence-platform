# Kubernetes deployment configuration for Credit Intelligence Platform
apiVersion: v1
kind: Namespace
metadata:
  name: credit-intelligence
---
# PostgreSQL Database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: credit-intelligence
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: "credit_intelligence"
        - name: POSTGRES_USER
          value: "credit_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: credit-intelligence
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
# Redis Cache
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: credit-intelligence
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: credit-intelligence
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
# Backend API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: credit-intelligence
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: credit-intelligence/backend:latest
        env:
        - name: DATABASE_URL
          value: "postgresql://credit_user:$(POSTGRES_PASSWORD)@postgres-service:5432/credit_intelligence"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: ALPHA_VANTAGE_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: alpha-vantage
        - name: NEWS_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: news-api
        - name: FRED_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: fred-api
        ports:
        - containerPort: 8000
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: credit-intelligence
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
---
# Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: credit-intelligence
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: credit-intelligence/frontend:latest
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "https://api.credit-intelligence.com"
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: credit-intelligence
spec:
  selector:
    app: frontend
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP
---
# MLOps Pipeline (Scheduled Job)
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mlops-retrain
  namespace: credit-intelligence
spec:
  schedule: "0 2 * * 0"  # Every Sunday at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: mlops-retrain
            image: credit-intelligence/backend:latest
            command: ["python", "-m", "mlops.model_pipeline"]
            env:
            - name: DATABASE_URL
              value: "postgresql://credit_user:$(POSTGRES_PASSWORD)@postgres-service:5432/credit_intelligence"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: MLFLOW_TRACKING_URI
              value: "http://mlflow-service:5000"
          restartPolicy: OnFailure
---
# Ingress Controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: credit-intelligence-ingress
  namespace: credit-intelligence
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - credit-intelligence.com
    - api.credit-intelligence.com
    secretName: credit-intelligence-tls
  rules:
  - host: credit-intelligence.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 3000
  - host: api.credit-intelligence.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 8000
---
# Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: credit-intelligence
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
# Secrets (to be created manually or via CI/CD)
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: credit-intelligence
type: Opaque
data:
  password: Y3JlZGl0X3Bhc3N3b3JkXzEyMw==  # base64 encoded
---
apiVersion: v1
kind: Secret
metadata:
  name: api-keys
  namespace: credit-intelligence
type: Opaque
data:
  alpha-vantage: ""  # base64 encoded API key
  news-api: ""       # base64 encoded API key
  fred-api: ""       # base64 encoded API key
